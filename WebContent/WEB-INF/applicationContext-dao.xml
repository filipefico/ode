<?xml version="1.0"?>
<!DOCTYPE beans PUBLIC "-//SPRING//DTD BEAN//EN"
	"http://www.springframework.org/dtd/spring-beans.dtd">


<beans>
	<!-- Procura por Advisors no contexto e cria os objetos proxy. -->
	<bean
		class="org.springframework.aop.framework.autoproxy.DefaultAdvisorAutoProxyCreator" />

	<!-- AOP Advisor -->
	<bean
		class="org.springframework.transaction.interceptor.TransactionAttributeSourceAdvisor">
		<property name="transactionInterceptor" ref="txInterceptor" />
	</bean>

	<!-- AOP Advice. Intercepta o método e o empacota em uma transação -->
	<bean id="txInterceptor"
		class="org.springframework.transaction.interceptor.TransactionInterceptor">
		<property name="transactionManager" ref="transactionManager" />
		<property name="transactionAttributeSource">
			<bean
				class="org.springframework.transaction.annotation.AnnotationTransactionAttributeSource" />
		</property>
	</bean>


	<bean name="propertiesConfigurator"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="classpath:/config.properties" />

	</bean>

	<!-- Postgresql -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName">
			<value>org.postgresql.Driver</value>
		</property>
		<property name="url" value="${banco.url}" />
		<property name="username" value="${banco.username}" />
		<property name="password" value="${banco.password}" />


	</bean>

	<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties">
			<props>
				<prop key="hibernate.hbm2ddl.auto">update</prop>
				<prop key="hibernate.dialect">
					org.hibernate.dialect.PostgreSQLDialect
		</prop>
				<prop key="hibernate.show_sql">true</prop>
				<prop key="hibernate.format_sql">false</prop>
				<prop key="hibernate.c3p0.minPoolSize">5</prop>
				<prop key="hibernate.c3p0.maxPoolSize">20</prop>
				<prop key="hibernate.c3p0.timeout">600</prop>
				<prop key="hibernate.c3p0.max_statement">50</prop>
				<prop key="hibernate.c3p0.testConnectionOnCheckout">
					false
		</prop>

			</props>
		</property>
	</bean>

	<!--
		MySQL -> <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"> <property
		name="driverClassName"> <value>com.mysql.jdbc.Driver</value>
		</property> <property name="url">
		<value>jdbc:mysql://localhost:3306/gr</value> </property> <property
		name="username"> <value>gppi</value> </property> <property
		name="password"> <value>gppi</value> </property> </bean> <bean
		id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties"> <props> <prop
		key="hibernate.hbm2ddl.auto">update</prop> <prop
		key="hibernate.dialect"> org.hibernate.dialect.MySQLDialect </prop>
		<prop key="hibernate.show_sql">false</prop> <prop
		key="hibernate.format_sql">false</prop> <prop
		key="hibernate.c3p0.minPoolSize">5</prop> <prop
		key="hibernate.c3p0.maxPoolSize">20</prop> <prop
		key="hibernate.c3p0.timeout">600</prop> <prop
		key="hibernate.c3p0.max_statement">50</prop> <prop
		key="hibernate.c3p0.testConnectionOnCheckout"> false </prop> </props>
		</property> </bean
	-->

	<!--
		SQL Server -> <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"> <property
		name="driverClassName">
		<value>net.sourceforge.jtds.jdbc.Driver</value> </property> <property
		name="url"> <value>jdbc:jtds:sqlserver://10.0.0.10:1433/gppi</value>
		</property> <property name="username"> <value>gppi</value> </property>
		<property name="password"> <value>gppi</value> </property> </bean>

		<bean id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties"> <props> <prop
		key="hibernate.hbm2ddl.auto">create</prop> <prop
		key="hibernate.dialect"> org.hibernate.dialect.SQLServerDialect
		</prop> <prop key="hibernate.show_sql">false</prop> <prop
		key="hibernate.format_sql">false</prop> <prop
		key="hibernate.c3p0.minPoolSize">5</prop> <prop
		key="hibernate.c3p0.maxPoolSize">20</prop> <prop
		key="hibernate.c3p0.timeout">600</prop> <prop
		key="hibernate.c3p0.max_statement">50</prop> <prop
		key="hibernate.c3p0.testConnectionOnCheckout"> false </prop> </props>
		</property> </bean
	-->

	<!--
		Apache Derby <bean id="dataSource"
		class="org.apache.commons.dbcp.BasicDataSource"> <property
		name="driverClassName">
		<value>org.apache.derby.jdbc.ClientDriver</value> </property>
		<property name="url"> <value>jdbc:derby://localhost:1527/gppi</value>
		</property> <property name="username"> <value>sa</value> </property>
		<property name="password"> <value>sa</value> </property> </bean> <bean
		id="hibernateProperties"
		class="org.springframework.beans.factory.config.PropertiesFactoryBean">
		<property name="properties"> <props> <prop
		key="hibernate.hbm2ddl.auto">update</prop> <prop
		key="hibernate.dialect"> org.hibernate.dialect.DerbyDialect </prop>
		<prop key="hibernate.show_sql">false</prop> <prop
		key="hibernate.format_sql">false</prop> <prop
		key="hibernate.c3p0.minPoolSize">5</prop> <prop
		key="hibernate.c3p0.maxPoolSize">20</prop> <prop
		key="hibernate.c3p0.timeout">600</prop> <prop
		key="hibernate.c3p0.max_statement">50</prop> <prop
		key="hibernate.c3p0.testConnectionOnCheckout"> false </prop> </props>
		</property> </bean>
	-->





	<bean id="transactionManager"
		class="org.springframework.orm.hibernate3.HibernateTransactionManager">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>



	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
		<property name="dataSource">
			<ref local="dataSource" />
		</property>
		<property name="hibernateProperties">
			<ref bean="hibernateProperties" />
		</property>

		<!-- OR mapping files. -->

		<property name="annotatedClasses">
			<list>
				<value>
					nucleo.comuns.autenticacao.acegi.dominio.NucleoGrantedAuthority </value>
				<value> nucleo.comuns.autenticacao.acegi.dominio.NucleoPessoa </value>
				<value> nucleo.comuns.autenticacao.acegi.dominio.NucleoUserDetails </value>
				<value> ode.exemplo2.pessoa.Cdp.PessoaExemplo </value>
				<value> ode.conhecimento.principal.Cdp.Conhecimento </value>
				<value> ode.conhecimento.processo.Cdp.KDominioAplicacao </value>
				<value> ode.conhecimento.processo.Cdp.TipoKArtefato </value>
				<value> ode.conhecimento.processo.Cdp.KTipoSoftware </value>
				<value> ode.conhecimento.processo.Cdp.KFerramentaSoftware </value>
				<value> ode.conhecimento.processo.Cdp.KArtefato </value>
				<value> ode.conhecimento.processo.Cdp.KParadigma </value>
				<value> ode.conhecimento.organizacao.Cdp.KDominioConhecimento </value>
				<value> ode.conhecimento.processo.Cdp.KCategoriaProcesso </value>
				<value> ode.processoPadrao.Cdp.CompPP </value>
				<value> ode.processoPadrao.Cdp.RequisitoCompPP </value>
				<value> ode.processoPadrao.Cdp.InterfaceCompPP </value>
				<value> ode.processoPadrao.Cdp.CompPPProcessoSimples </value>
				<value> ode.processoPadrao.Cdp.CompPPProcessoComplexo </value>
				<value> ode.processoPadrao.Cdp.InterfaceCompPPProcessoSimples </value>
				<value> ode.processoPadrao.Cdp.InterfaceCompPPProcessoComplexo </value>
				<value> ode.processoPadrao.Cdp.InteracaoSubprocessos </value><!---->
				
			</list>
		</property>

	</bean>


	<!--  Configurações das classes DAO -->
	<bean id="nucleoPessoaDAO"
		class="nucleo.comuns.autenticacao.acegi.persistencia.NucleoPessoaDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="nucleoUserDetailsDAO"
		class="nucleo.comuns.autenticacao.acegi.persistencia.NucleoUserDetailsDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="pessoaExemploDao" class="ode.exemplo2.pessoa.Cgd.PessoaExemploDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="kDominioAplicacaoDao"
		class="ode.conhecimento.processo.Cgd.KDominioAplicacaoDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<bean id="kTipoSoftwareDao"
		class="ode.conhecimento.processo.Cgd.KTipoSoftwareDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="kFerramentaSoftwareDao"
		class="ode.conhecimento.processo.Cgd.KFerramentaSoftwareDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<bean id="kArtefatoDao" class="ode.conhecimento.processo.Cgd.KArtefatoDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="tipoKArtefatoDao" class="ode.conhecimento.processo.Cgd.TipoKArtefatoDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>

	<bean id="dominioConhecimentoDao"
		class="ode.conhecimento.organizacao.Cgd.KDominioConhecimentoDAOHibernate"
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<bean id="kParadigmaDao" class="ode.conhecimento.processo.Cgd.KParadigmaDAOHibernate">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
		
	<bean id="categoriaProcessoDao"
		class="ode.conhecimento.processo.Cgd.KCategoriaProcessoDAOHibernate"
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory">
			<ref local="sessionFactory" />
		</property>
	</bean>
	
	<!-- ProcessoPadrao -->
	<bean id="compPPDao" class="ode.processoPadrao.Cgd.CompPPDAOHibernate"
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory"> 
			<ref local="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="requisitoCompPPDao" class="ode.processoPadrao.Cgd.RequisitoCompPPDAOHibernate"
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory"> 
			<ref local="sessionFactory"/>
		</property>
	</bean>
	
	<bean id="interfaceCompPPDao" class="ode.processoPadrao.Cgd.InterfaceCompPPDAOHibernate"
		lazy-init="default" autowire="default" dependency-check="default">
		<property name="sessionFactory"> 
			<ref local="sessionFactory"/>
		</property>
	</bean>
</beans>
